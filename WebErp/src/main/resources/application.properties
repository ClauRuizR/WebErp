


#thymeleaf
spring.thymeleaf.check-template-location=true
spring.thymeleaf.prefix=classpath:/templates/views/
spring.thymeleaf.suffix=.html
error.whitelabel.enabled=false
spring.thymeleaf.cache=false
server.port= 8080
#spring.datasource.platform=h2
#spring.h2.console.enabled=true
#spring.h2.console.path=/console
#jdbc:h2:mem:testdb





# DataSource settings: set here your own configurations for the database
# connection. In this example we have "netgloo_blog" as database name and
# "root" as username and password.
spring.datasource.url = jdbc:mysql://127.0.0.1:3306/erptest
spring.datasource.username = usr_erp
spring.datasource.password = 12345678
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#liquibase
management.security.enabled=false

liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml
liquibase.url=${spring.datasource.url}
liquibase.user=${spring.datasource.username}
liquibase.password=${spring.datasource.password}
liquibase.enabled=true
liquibase.default-schema=erptest

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true


# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = none

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect








